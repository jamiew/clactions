name: Weather

on:
  schedule:
    - cron: '0 * * * *'  # Every hour
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  fetch-weather:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch weather data
        id: weather
        run: |
          # Use wttr.in API - no key needed, returns JSON
          RESPONSE=$(curl -s 'https://wttr.in/New_York,NY?format=j1')

          # Validate JSON response
          if ! echo "$RESPONSE" | jq -e . >/dev/null 2>&1; then
            echo "Error: Invalid JSON response from wttr.in"
            echo "$RESPONSE"
            exit 1
          fi

          echo "$RESPONSE" > weather_raw.json

          # Extract key data
          TEMP_F=$(echo "$RESPONSE" | jq -r '.current_condition[0].temp_F')
          CONDITION=$(echo "$RESPONSE" | jq -r '.current_condition[0].weatherDesc[0].value')
          HUMIDITY=$(echo "$RESPONSE" | jq -r '.current_condition[0].humidity')
          FEELS_LIKE=$(echo "$RESPONSE" | jq -r '.current_condition[0].FeelsLikeF')

          # Create data directory if it doesn't exist
          mkdir -p data

          # Create clean data/weather.json
          cat > data/weather.json << EOF
          {
            "location": "New York, NY",
            "temperature": $TEMP_F,
            "temperature_unit": "F",
            "feels_like": $FEELS_LIKE,
            "condition": "$CONDITION",
            "humidity": $HUMIDITY,
            "last_updated": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "source": "wttr.in"
          }
          EOF

          cat data/weather.json

      - name: Commit weather data
        run: |
          set -euo pipefail

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add data/weather.json weather_raw.json

          # Exit early if nothing changed
          if git diff --staged --quiet; then
            echo "No weather changes"
            exit 0
          fi

          # Commit first (clean index), then rebase onto latest remote and push
          git commit -m "Update weather data for New York, NY"
          git fetch origin
          git rebase origin/main
          git push origin HEAD:main
