name: HackerNews

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  fetch-and-create-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch HN top story and comments
        id: fetch-hn
        run: |
          # Get top story ID
          TOP_STORY_ID=$(curl -s https://hacker-news.firebaseio.com/v0/topstories.json | jq '.[0]')
          echo "Top story ID: $TOP_STORY_ID"

          # Get story details
          STORY=$(curl -s "https://hacker-news.firebaseio.com/v0/item/${TOP_STORY_ID}.json")
          echo "$STORY" > hn_story.json

          TITLE=$(echo "$STORY" | jq -r '.title')
          URL=$(echo "$STORY" | jq -r '.url // empty')
          STORY_URL="https://news.ycombinator.com/item?id=${TOP_STORY_ID}"
          BY=$(echo "$STORY" | jq -r '.by')
          SCORE=$(echo "$STORY" | jq -r '.score')
          COMMENT_COUNT=$(echo "$STORY" | jq -r '.descendants // 0')

          # Get top 10 comment IDs
          COMMENT_IDS=$(echo "$STORY" | jq -r '.kids[0:10][]? // empty')

          # Fetch top comments
          COMMENTS=""
          for id in $COMMENT_IDS; do
            COMMENT=$(curl -s "https://hacker-news.firebaseio.com/v0/item/${id}.json")
            COMMENT_TEXT=$(echo "$COMMENT" | jq -r '.text // empty' | sed 's/<[^>]*>//g' | head -c 500)
            COMMENT_BY=$(echo "$COMMENT" | jq -r '.by // "unknown"')
            if [ -n "$COMMENT_TEXT" ]; then
              COMMENTS="${COMMENTS}\n\n**${COMMENT_BY}**: ${COMMENT_TEXT}..."
            fi
          done

          # Save for Claude to read
          cat > hn_context.md << EOF
          # HackerNews Top Story

          **Title**: ${TITLE}
          **Author**: ${BY}
          **Score**: ${SCORE}
          **Comments**: ${COMMENT_COUNT}
          **Story URL**: ${URL}
          **Discussion**: ${STORY_URL}

          ## Top Comments

          ${COMMENTS}
          EOF

          # Export for next step
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "story_url=$STORY_URL" >> $GITHUB_OUTPUT
          echo "score=$SCORE" >> $GITHUB_OUTPUT
          echo "comment_count=$COMMENT_COUNT" >> $GITHUB_OUTPUT

      - name: Claude writes HN blog post
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_args: |
            --allowedTools "Read,Write,Bash(gh pr:*),Bash(mkdir:*)"
          prompt: |
            Create a PR titled "ðŸ“° HN Blog Post: ${{ steps.fetch-hn.outputs.title }}"

            PR Body:
            Automated blog post about today's top HackerNews story.

            **Story**: ${{ steps.fetch-hn.outputs.title }}
            **HN Discussion**: ${{ steps.fetch-hn.outputs.story_url }} (${{ steps.fetch-hn.outputs.score }} points, ${{ steps.fetch-hn.outputs.comment_count }} comments)
            **Original**: ${{ steps.fetch-hn.outputs.url }}

            ---
            Write a blog post about today's top HackerNews story!

            **Story Details:**
            - Title: ${{ steps.fetch-hn.outputs.title }}
            - URL: ${{ steps.fetch-hn.outputs.url }}
            - Discussion: ${{ steps.fetch-hn.outputs.story_url }}
            - Score: ${{ steps.fetch-hn.outputs.score }}
            - Comments: ${{ steps.fetch-hn.outputs.comment_count }}

            **Full context** (including top comments) is in `hn_context.md` - please read it.

            **Your Task:**

            1. Read `hn_context.md` to understand the full story + top comments
            2. Analyze what makes this story interesting and newsworthy
            3. Write a comprehensive blog post that includes:
               - Engaging title and introduction
               - Summary of the article/story
               - Key insights and themes from the HN discussion
               - Your analysis and commentary
               - Conclusion
            4. Create the blog post in Markdown format
            5. Save it as `blog/YYYY-MM-DD-{slug}.md` (use today's date and create a slug from the title)
            6. Include proper front matter:
               ```yaml
               ---
               title: "Your Blog Post Title"
               date: YYYY-MM-DD
               author: Claude
               tags: [hackernews, tech, analysis]
               hn_url: ${{ steps.fetch-hn.outputs.story_url }}
               original_url: ${{ steps.fetch-hn.outputs.url }}
               ---
               ```
            7. Create a PR with your blog post

            **Style guidelines:**
            - Write for a technical audience
            - Be analytical but accessible
            - Include insights from HN comments to add depth
            - Cite interesting comments or perspectives
            - Aim for 800-1200 words
            - Use a slightly skeptical/analytical tone when appropriate

            Make it informative and engaging! ðŸš€
