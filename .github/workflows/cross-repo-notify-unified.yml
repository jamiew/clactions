name: Cross-Repo Notify (Unified)

on:
  schedule:
    # Run every 8 hours
    - cron: '0 */8 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  notify-downstream:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Analyze and notify
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_args: |
            --allowedTools "Bash(git:*),Bash(gh:*),Bash(date:*),Bash(cat:*),Bash(mkdir:*),Bash(echo:*),Read,Write"
          prompt: |
            Analyze all workflow changes from the last 8 hours holistically and create an issue on jamiew/issue-dump.

            Tasks:
            1. Find commits that modified .github/workflows/ in the last 8 hours and get the range:
               ```bash
               COMMITS=$(git log --since="8 hours ago" --pretty=format:"%H" -- .github/workflows/)
               OLDEST=$(echo "$COMMITS" | tail -1)
               NEWEST=$(echo "$COMMITS" | head -1)
               ```

            2. If no changes found, exit successfully with a message.

            3. Generate a unified diff showing the net effect of all changes:
               ```bash
               git diff ${OLDEST}^..$NEWEST -- .github/workflows/
               ```

            4. Also get the list of commits with messages for context.

            5. Write a comprehensive changelog to changelog.md analyzing the unified diff:

               ## üîÑ Workflow Changelog

               ### Summary
               [2-4 sentences describing the overall theme - e.g. "Major refactoring", "Bug fixes", "New automation", etc.]

               ### Highlights
               - ‚ú® [Most important new feature or capability]
               - üîß [Important fix or improvement]
               - üèóÔ∏è [Architectural or structural change]
               - [2-5 highlights using emojis: ‚ú® feature, üîß fix, üèóÔ∏è refactor, üìù docs, ‚ö° perf, üîí security]

               ### What Changed

               #### New Workflows
               - **workflow-name.yml** - [What it does and why it was added]
               [Only include this section if new workflows were added]

               #### Modified Workflows

               For each modified workflow file, summarize what changed:

               **`workflow-name.yml`**
               - [Specific change with impact, e.g. "Schedule changed from hourly to every 8 hours"]
               - [Another change, e.g. "Added new permission: id-token: write"]
               - [Be concrete about cron changes, permission changes, new jobs/steps, etc.]

               #### Removed Workflows
               - **old-workflow.yml** - [What it did and why removed]
               [Only include if workflows were removed]

               ### Impact Assessment
               [1-2 paragraphs describing potential impacts on downstream systems, APIs, documentation, or dependencies. What might break? What needs updating?]

               ### Technical Details
               <details><summary>View commit list</summary>

               [Include the commit list with subjects and messages]

               </details>

            6. Create the issue on jamiew/issue-dump using gh CLI:
               ```bash
               export GH_TOKEN="${{ secrets.CROSS_REPO_PAT }}"
               gh issue create \
                 --repo jamiew/issue-dump \
                 --title "üîÑ Workflow changes in jamiew/clactions ($(date -u '+%Y-%m-%d %H:%M UTC'))" \
                 --body "$(cat changelog.md)

               ---

               @claude Please review these workflow changes and update any affected documentation, API clients, or downstream systems that may be impacted.

               **Repository:** \`jamiew/clactions\`
               **Analysis method:** Unified diff (holistic AI analysis)
               **Period:** Last 8 hours

               **Quick Links:**
               - üìÅ [View workflow directory](https://github.com/jamiew/clactions/tree/main/.github/workflows)
               - üìù [Recent commits](https://github.com/jamiew/clactions/commits/main/.github/workflows)
               - üîó [Compare changes](https://github.com/jamiew/clactions/compare/${OLDEST}...${NEWEST})
               - ‚öôÔ∏è [This workflow run](https://github.com/jamiew/clactions/actions/runs/${{ github.run_id }})"
               ```

            Important:
            - Look at the unified diff to understand NET effect (what actually changed overall, not just individual commits)
            - Identify patterns across changes (e.g. "All data workflows now use X pattern")
            - Call out breaking changes or significant behavioral changes
            - Be specific about: schedule changes, permission changes, new dependencies, renamed workflows
            - Group related changes together
            - Focus on downstream impact - what systems might need to adapt?
            - Don't include raw diffs, just your analysis
