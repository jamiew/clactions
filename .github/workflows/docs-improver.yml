name: Docs Improver

on:
  pull_request:
    types: [closed]
    branches: [main]
  issues:
    types: [opened, labeled]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: read
  id-token: write

jobs:
  improve-docs:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true || github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gather context
        id: context
        run: |
          # Get recent merged PRs (last 10)
          gh pr list --state merged --limit 10 --json number,title,body,mergedAt,author > recent_prs.json

          # Get recent issues (last 10)
          gh issue list --limit 10 --json number,title,body,createdAt,author,labels > recent_issues.json

          echo "context_ready=true" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Claude analyzes and improves docs
        if: steps.context.outputs.context_ready == 'true'
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_args: |
            --allowedTools "Read,Write,Edit,Bash(gh pr:*)"
          prompt: |
            ðŸ“š **DOCUMENTATION IMPROVEMENT MODE**

            Your job is to keep CLAUDE.md and README.md up-to-date and accurate based on:
            - Recent merged PRs
            - New/updated issues
            - Changes to the codebase

            **Context Files:**
            - `recent_prs.json` - Last 10 merged PRs
            - `recent_issues.json` - Last 10 issues

            **Your Task:**

            1. **Analyze Recent Changes**:
               - Read recent_prs.json and recent_issues.json
               - Identify patterns: new workflows added? workflows removed? new features?
               - Check for workflow changes in .github/workflows/
               - Look for mentions of documentation issues or unclear instructions

            2. **Review Current Documentation**:
               - Read CLAUDE.md - instructions for Claude Code working in this repo
               - Read README.md - user-facing documentation
               - Identify what's outdated, missing, or unclear

            3. **Make Improvements**:
               - Update workflow lists if workflows were added/removed/renamed
               - Add new features or patterns discovered in PRs
               - Fix any inaccuracies or outdated information
               - Improve clarity based on issue reports
               - Add troubleshooting tips for common problems
               - Update examples if needed

            4. **Create PR with Changes**:
               - Only create a PR if you find meaningful improvements to make
               - If docs are already accurate and complete, exit without creating a PR
               - PR title: "ðŸ“š Docs: Improve documentation based on recent changes"
               - Include a clear summary of what was updated and why

            **Guidelines:**
            - Be thorough but conservative - don't change things that are already good
            - Maintain the existing tone and style of each doc
            - CLAUDE.md is for Claude Code, README.md is for humans
            - Focus on accuracy and helpfulness
            - If you add new workflows, include proper categorization
            - Keep command examples up-to-date

            **Don't Create a PR If:**
            - Docs are already accurate and complete
            - Changes would be purely cosmetic
            - No new information from recent PRs/issues

            Let's keep the docs great! ðŸ“–
