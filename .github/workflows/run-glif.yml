name: Glif Run Workflow

on:
  schedule:
    - cron: '0 * * * *'  # Every hour
  workflow_dispatch:
    inputs:
      workflow_id:
        description: 'Glif Workflow ID to run (optional, uses GLIF_WORKFLOW_ID secret if not provided)'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  run-glif:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run Glif and get output
        id: glif
        run: |
          WORKFLOW_ID="${{ github.event.inputs.workflow_id || secrets.GLIF_WORKFLOW_ID }}"

          echo "Running Glif workflow: $WORKFLOW_ID"

          # Run the Glif workflow with New York weather parameters
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GLIF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "city_name": "New York, NY",
              "tempPicker": "fahrenheit"
            }' \
            "https://simple-api.glif.app/$WORKFLOW_ID")

          echo "Glif response: $RESPONSE"

          # Save output to file
          echo "$RESPONSE" > glif_output.json

          # Check for errors in response
          ERROR=$(echo "$RESPONSE" | jq -r '.error // empty')
          if [ -n "$ERROR" ] && [ "$ERROR" != "null" ]; then
            echo "Glif API error: $ERROR"
            echo "output=Error: $ERROR" >> $GITHUB_OUTPUT
          else
            # Extract output text/data (try multiple possible fields)
            OUTPUT=$(echo "$RESPONSE" | jq -r '.output // .result // .text // .data // empty')
            if [ -z "$OUTPUT" ] || [ "$OUTPUT" = "null" ]; then
              echo "output=No output from Glif" >> $GITHUB_OUTPUT
            else
              # Ensure output is single-line for GITHUB_OUTPUT
              OUTPUT_ESCAPED=$(echo "$OUTPUT" | jq -Rs '.')
              echo "output=$OUTPUT_ESCAPED" >> $GITHUB_OUTPUT
            fi
          fi

          # Also save full response for Claude to read
          cat glif_output.json

      - name: Claude processes Glif output
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: |
            A Glif workflow just ran to get weather data for New York, NY.

            Output preview: ${{ steps.glif.outputs.output }}

            Full response is in glif_output.json - please read it.

            Your task:
            1. Read glif_output.json to see the complete Glif response
            2. Extract the weather information (temperature, conditions, etc.)
            3. Update data.json with a `weather` field containing:
               - city: "New York, NY"
               - temperature: extracted value
               - conditions: weather description
               - last_updated: current timestamp
               - raw_glif_output: the full Glif response
            4. Optionally update the webpage HTML to display weather nicely
               (maybe a weather card with icon, temperature, conditions)

            This is a weather Glif that returns New York weather in Fahrenheit.
            Be creative in presenting it on the site!

            Create a PR with your updates.
          pr_title: "üå§Ô∏è Update weather data from Glif"
          pr_body: |
            Automated weather update for New York, NY via Glif workflow.

            Glif workflow fetched current weather conditions and temperature.

            Run ID: ${{ github.run_id }}
